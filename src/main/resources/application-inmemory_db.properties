# ========================================
# 개발 환경용 H2 인메모리 데이터베이스 프로파일
# ========================================
# 이 프로파일은 로컬 개발 환경에서 빠른 테스트와 개발을 위해 설계됨
# 다른 팀원의 환경에 영향을 주지 않는 독립적인 개발 환경을 제공함

# ========================================
# H2 인메모리 데이터베이스 연결 설정
# ========================================

# 인메모리 데이터베이스 URL 설정
# jdbc:h2:mem:localdb - 메모리에만 존재하는 DB, 애플리케이션 종료 시 모든 데이터 삭제
spring.datasource.url=jdbc:h2:mem:localdb
DB_CLOSE_DELAY=-1
DB_CLOSE_ON_EXIT=FALSE

# H2 JDBC 드라이버 클래스 지정
# Spring Boot가 자동으로 감지하지만 명시적으로 설정하여 명확성 확보
spring.datasource.driverClassName=org.h2.Driver

# 데이터베이스 인증 정보 (H2 기본값)
# H2 인메모리 DB는 보안이 필요하지 않으므로 기본 사용자/빈 패스워드 사용
spring.datasource.username=sa
spring.datasource.password=

# ========================================
# H2 데이터베이스 웹 콘솔 설정
# ========================================

# H2 웹 콘솔 활성화 - 개발 중 데이터베이스 상태 실시간 확인 가능
spring.h2.console.enabled=true

# 콘솔 접근 경로 설정
# 애플리케이션 실행 후 http://localhost:8081/api/h2-console 에서 접근 가능
spring.h2.console.path=/h2-console

# 외부 접근 허용 설정 (로컬 개발 환경이므로 보안 완화)
# 운영 환경에서는 반드시 false로 설정해야 함
spring.h2.console.settings.web-allow-others=true

# ========================================
# JPA/Hibernate 설정 (개발 환경 최적화)
# ========================================

# H2 데이터베이스 방언 설정
# Hibernate가 H2에 특화된 SQL 문법과 기능을 사용할 수 있도록 설정
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# DDL 자동 생성 전략 - create-drop
# 애플리케이션 시작: 스키마 생성 → 종료: 스키마 삭제 (항상 깨끗한 환경)
# 개발 단계에서 엔티티 변경 시 스키마 자동 반영됨
spring.jpa.hibernate.ddl-auto=create-drop

# 데이터소스 초기화 지연 설정
# Hibernate가 스키마를 먼저 생성한 후 data.sql 등의 초기 데이터 스크립트 실행
spring.jpa.defer-datasource-initialization=true

# ========================================
# 개발용 상세 로깅 설정
# ========================================

# 애플리케이션 로직 디버깅을 위한 상세 로그
logging.level.com.hscoderadar=DEBUG

# Spring Web MVC 요청/응답 처리 과정 로깅
# REST API 개발 시 요청 라우팅과 응답 처리 과정 확인 가능
logging.level.org.springframework.web=DEBUG

# 실행되는 SQL 쿼리 로깅
# JPA가 생성하는 SQL문을 콘솔에서 확인하여 성능 튜닝과 디버깅에 활용
logging.level.org.hibernate.SQL=DEBUG

# SQL 파라미터 바인딩 값 로깅
# PreparedStatement의 ? 자리에 실제로 바인딩되는 값들을 확인 가능
# 쿼리 오류 디버깅과 데이터 확인에 매우 유용함
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
