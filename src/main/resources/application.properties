# =====================================================
# AI 기반 무역 규제 레이더 플랫폼 v6.1 설정
# =====================================================

# 활성 프로파일 설정
spring.profiles.active=dev

# 애플리케이션 기본 설정
spring.application.name=hscoderadar
server.port=8081
server.servlet.context-path=/api

# =====================================================
# 데이터베이스 설정 (PostgreSQL + pgvector)
# =====================================================
spring.datasource.url=jdbc:postgresql://db.k-developer.pro:5432/trade
spring.datasource.username=trade
spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# =====================================================
# Redis 설정
# =====================================================
spring.data.redis.host=db.k-developer.pro
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.password=${REDIS_PASSWORD}

# =====================================================
# AI 모델 설정 v6.1
# =====================================================

# LangChain4j Voyage AI 임베딩 모델 설정
langchain4j.voyage-ai.embedding-model.api-key=${VOYAGE_API_KEY}
langchain4j.voyage-ai.embedding-model.model-name=voyage-3-large
langchain4j.voyage-ai.embedding-model.log-requests=true
langchain4j.voyage-ai.embedding-model.log-responses=true

# =====================================================
# RAG 시스템 설정 v6.1
# =====================================================

# 임베딩 검색 설정
app.rag.embedding.dimension=1024
app.rag.similarity.threshold=0.7
app.rag.max.results=10
app.rag.cache.max-size=1000
app.rag.cache.ttl=3600

# PostgreSQL + pgvector 설정
app.rag.vector.table=hscode_vectors
app.rag.vector.index-type=hnsw
app.rag.vector.distance-metric=cosine

# LangChain4j PgVector 설정
langchain4j.pgvector.table=langchain4j_embedding
langchain4j.pgvector.dimension=1024

# =====================================================
# 채팅 시스템 설정 v6.1
# =====================================================

# 채팅 메모리 설정
app.chat.memory-max-messages=20
app.chat.session-timeout=1800

# 스트리밍 설정
app.chat.streaming.enabled=true
app.chat.streaming.chunk-size=50
app.chat.streaming.delay-ms=100

# 회원/비회원 차별화 설정
app.chat.guest.max-requests-per-hour=20
app.chat.member.max-requests-per-hour=200
app.chat.member.history-enabled=true

# =====================================================
# JWT 토큰 설정
# =====================================================
app.jwt.secret=hscode-radar-jwt-secret-key-v6.1-2024
app.jwt.expiration=3600000
app.jwt.refresh-expiration=2592000000

# JWT 설정 (기존 호환성)
jwt.secret-key=${JWT_SECRETKEY:hscode-radar-jwt-secret-key-v6.1-2024}
jwt.access-token-expiration-ms=3600000
jwt.refresh-token-short-expiration-ms=86400000
jwt.refresh-token-long-expiration-ms=2592000000

# =====================================================
# OAuth2 소셜 로그인 설정
# =====================================================

# OAuth2 프론트엔드 콜백
oauth2.frontend.callback-url=http://localhost:3000/auth/callback

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:978337244597-qj3759k46cbuivabdjjsrsr8p2je5k29.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:${GOOGLE_SECRETKEY:dummy}}
spring.security.oauth2.client.registration.google.scope=profile,email

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID:7d8e72838773807cda73c3c42eb4bb52}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET:${KAKAO_SECRETKEY:dummy}}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Naver OAuth2
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID:O20sXz7ht7jTqcFqJ36P}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET:${NAVER_SECRETKEY:dummy}}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email

# Naver OAuth2 Provider 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao OAuth2 Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# =====================================================
# SMS 인증 설정
# =====================================================
app.sms.enabled=true
app.sms.provider=coolsms
app.sms.api-key=${SMS_API_KEY:${COOLSMS_API_KEY:dummy}}
app.sms.api-secret=${SMS_API_SECRET:${COOLSMS_API_SECRET:dummy}}
app.sms.sender-number=${SMS_SENDER_NUMBER:01012345678}
app.sms.verification.code-length=6
app.sms.verification.code-expiration-minutes=5
app.sms.verification.max-attempts=5

# ========================================
# Email Settings
# ========================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# =====================================================
# 외부 API 설정
# =====================================================

# Claude AI API 설정 (환경변수에서 로드)
app.claude.api-key=${CLAUDE_API_KEY}
app.claude.model=claude-sonnet-4-20250514
app.claude.max-tokens=64000
app.claude.temperature=0.3

# LangChain4j Anthropic 모델 설정 (v1.1.0-beta7+)
langchain4j.anthropic.chat-model.api-key=${CLAUDE_API_KEY}
langchain4j.anthropic.chat-model.model-name=claude-sonnet-4-20250514
langchain4j.anthropic.chat-model.max-tokens=4000
langchain4j.anthropic.chat-model.temperature=0.2
langchain4j.anthropic.chat-model.log-requests=true
langchain4j.anthropic.chat-model.log-responses=true

# LangChain4j Anthropic 스트리밍 모델 설정
langchain4j.anthropic.streaming-chat-model.api-key=${CLAUDE_API_KEY}
langchain4j.anthropic.streaming-chat-model.model-name=claude-sonnet-4-20250514
langchain4j.anthropic.streaming-chat-model.max-tokens=10000
langchain4j.anthropic.streaming-chat-model.temperature=0.2
langchain4j.anthropic.streaming-chat-model.log-requests=true
langchain4j.anthropic.streaming-chat-model.log-responses=true

# 무역 뉴스 API
app.news.api-key=${NEWS_API_KEY:dummy}
app.news.update-interval=1800
app.news.max-articles=50

# COMTRADE API

comtrade.api.key=${COMTRADE_API_KEY}

# =====================================================
# 보안 설정
# =====================================================
app.cors.allowed-origins=http://localhost:3000,http://localhost:3001
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# 개인정보 암호화
app.security.aes-key=${AES_ENCRYPTION_KEY:demo1234567890123456789012345678}

# Rate Limiting
app.security.rate-limit.enabled=true
app.security.rate-limit.requests-per-minute=60

# =====================================================
# JSON 및 웹 설정
# =====================================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent-output=true
spring.jackson.default-property-inclusion=ALWAYS
spring.jackson.time-zone=Asia/Seoul

# 멀티파트 파일 업로드
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# =====================================================
# 로깅 설정
# =====================================================
logging.level.com.hscoderadar=INFO
logging.level.dev.langchain4j=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO

# 파일 로깅
#logging.file.name=logs/hscode-radar.log
#logging.file.max-size=100MB
#logging.file.max-history=30

# =====================================================
# API 문서화 설정 (SpringDoc)
# =====================================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json

# =====================================================
# 모니터링 및 헬스체크 설정
# =====================================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true
management.health.redis.enabled=true

# =====================================================
# v6.1 특화 설정
# =====================================================

# SSE 스트리밍 설정
app.sse.timeout=30000
app.sse.heartbeat-interval=5000
app.sse.buffer-size=1024

# 병렬 처리 설정
app.parallel.core-pool-size=5
app.parallel.max-pool-size=10
app.parallel.queue-capacity=100

# 캐시 설정
app.cache.rag-search.ttl=3600
app.cache.exchange-rate.ttl=3600
app.cache.news.ttl=1800

# LangChain4j 버전
langchain4j.version=1.1.0

# Spring AI 자동 구성 비활성화 (LangChain4j 사용)
spring.ai.model.chat=none

# 환경변수 파일 로드 (선택사항)
spring.config.import=optional:file:.env[.properties]

# 애플리케이션 버전
spring.application.version=@project.version@
